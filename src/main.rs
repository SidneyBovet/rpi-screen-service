use crate::api_config::ApiConfig;
use clap::{arg, Command};
use std::path::PathBuf;

pub mod api_config {
    // Generated by [`prost-build`]
    include!(concat!(env!("OUT_DIR"), "/api_config.rs"));
    // Generated by [`pbjson-build`]
    include!(concat!(env!("OUT_DIR"), "/api_config.serde.rs"));
}

fn cli() -> Command {
    Command::new("API tester")
        .about("Testing API stuff (and args parsing + proto, really)")
        //.bin_name("api_tester")
        .arg_required_else_help(true)
        .arg(arg!(--"config-path" <PATH>).value_parser(clap::value_parser!(std::path::PathBuf)))
}

fn extract_config(path: Option<&PathBuf>) -> ApiConfig {
    let mut config = api_config::ApiConfig::default();
    config.telegram_api_code = path.map(|p| p.to_str().unwrap()).unwrap().into();
    config
}

fn main() {
    let matches = cli().get_matches();
    let path = matches.get_one("config-path");
    let config = extract_config(path);

    println!("{:#?}", config);
}
